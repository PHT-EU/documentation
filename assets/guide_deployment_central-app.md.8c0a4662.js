import{_ as e,o as a,c as s,f as l}from"./app.a2f06a94.js";const A=JSON.parse('{"title":"App","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"relativePath":"guide/deployment/central-app.md"}'),n={name:"guide/deployment/central-app.md"},i=l(`<h1 id="app" tabindex="-1">App <a class="header-anchor" href="#app" aria-hidden="true">#</a></h1><p>The central app contains the following services:</p><ul><li>user-interface,</li><li>api (authorization- &amp; resource-server)</li><li>realtime-server</li><li>train-manager</li><li>...</li></ul><p>Those are managed in a mono-repository on GitHUb. Contributions are very welcome and be performed by following the guideline of the README in the repository.</p><div class="info custom-block"><p class="custom-block-title">Info</p><p>Assure yourself that you are not using <code>dash</code> as default shell. Therefore, run the command <code>dpkg-reconfigure dash</code> to make the adjustment if necessary.</p></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/PHT-Medic/central-deployment</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> central-deployment</span></span>
<span class="line"></span></code></pre></div><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ ./env.sh</span></span>
<span class="line"></span></code></pre></div><p>This command will create environment files in the following directories:</p><ul><li>config/.env</li><li>config/api/.env</li><li>config/realtime/.env</li><li>config/third-party/.env</li><li>config/train-manager/.env</li><li>config/ui/.env</li></ul><p>Change the values to your needs.</p><div class="warning custom-block"><p class="custom-block-title">Info</p><p>Don&#39;t forget to replace the placeholders with the actual values:</p><ul><li><code>[APP_URL]</code>: Web address (e.g. <a href="https://app.example.com/" target="_blank" rel="noreferrer">https://app.example.com/</a>)</li><li><code>[APP_API_URL]</code>: Web address (e.g. <a href="https://app.example.com/api/" target="_blank" rel="noreferrer">https://app.example.com/api/</a>)</li></ul></div><p>The following values need to be adjusted before running the setup script!</p><ul><li>config/api/.env <ul><li>API_URL: <code>[APP_API_URL]</code></li><li>APP_URL: <code>[APP_URL]</code></li></ul></li><li>config/realtime/.env <ul><li>API_URL: <code>[APP_API_URL]</code></li></ul></li><li>config/train-manager/.env <ul><li>API_URL: <code>[APP_API_URL]</code></li></ul></li><li>config/ui/.env <ul><li>API_URL: <code>[APP_API_URL]</code></li><li>REALTIME_URL: <code>[APP_URL]</code></li></ul></li></ul><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p>To set up everything just run the following command:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ ./setup.sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This will download the docker image and run initial project setup ðŸ”¥.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Start ðŸ›«</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ ./third-party.sh start</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ./start.sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Stop ðŸ›¬</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ ./third-party.sh stop</span></span>
<span class="line"><span style="color:#A6ACCD;">$ ./stop.sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Reset ðŸª‚</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ ./reset.sh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,26),t=[i];function o(p,c,r,d,u,h){return a(),s("div",null,t)}const f=e(n,[["render",o]]);export{A as __pageData,f as default};
